"""changed models

Revision ID: 0836f3ddacaf
Revises: dae71e80e64c
Create Date: 2024-06-24 00:50:19.202138

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0836f3ddacaf'
down_revision: Union[str, None] = 'dae71e80e64c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('plugin', 'description',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('plugin', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('plugin', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint('plugin_author_id_fkey', 'plugin', type_='foreignkey')
    op.drop_column('plugin', 'author_id')
    op.drop_table('author')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plugin', sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('plugin_author_id_fkey', 'plugin', 'author', ['author_id'], ['id'])
    op.alter_column('plugin', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('plugin', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('plugin', 'description',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.create_table('author',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='author_pkey')
    )
    # ### end Alembic commands ###
